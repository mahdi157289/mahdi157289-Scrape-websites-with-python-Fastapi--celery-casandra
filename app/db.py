from cassandra.cluster import Cluster
from cassandra.auth import PlainTextAuthProvider
from cassandra.cqlengine.connection import register_connection, set_default_connection
import json

#best practices for security and configuration management
import pathlib
import os
from dotenv import load_dotenv

# load environment variables from .env file
load_dotenv()
ASTRA_DB_CLIENT_ID = os.getenv("ASTRA_DB_CLIENT_ID")
ASTRA_DB_CLIENT_SECRET = os.getenv("ASTRA_DB_CLIENT_SECRET")
BASE_DIR = pathlib.Path(__file__).parent
CLUSTER_BUNDLE = str( BASE_DIR /  "ignored" / 'connect.zip')

# This is the path to your secure connect bundle, which is a zip file that contains the SSL certificates and other configuration files needed to connect to Astra DB.
def get_cluster():
    # This secure connect bundle is autogenerated when you download your SCB, 
    # if yours is different update the file name below
    cloud_config= {
    'secure_connect_bundle': CLUSTER_BUNDLE
    }
    auth_provider = PlainTextAuthProvider(ASTRA_DB_CLIENT_ID , ASTRA_DB_CLIENT_SECRET)
    cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
    return cluster
def get_session():
    cluster = get_cluster()
    session = cluster.connect()
    register_connection(str(session), session=session)
    set_default_connection(str(session))
    return session

# verification of connection to Astra DB
session = get_session()
row = session.execute("select release_version from system.local").one()
if row:
    print(row[0])
else:
    print("An error occurred.")